"There is a bit of syntactic sugar in Od, too. Well, we mentioned comma before
--- it is, of cource, a syntactic sugar over braces. Let's move on to more
sophisticated ones.
The first one is a shorthand for boolean arguments in a method. Instead of
writing both argument name and `true`, you can write only the name:"

run process quietly true killOnClose true

run process (quietly, killOnClose)

"The second pinch of syntactic sugar is quite similar to the do-notation from
Haskell. But don't be afraid: it's simple. The gist of it is: instead of passing
a callback to a method call, let us pretend that the remaining part of a program
is a callback. No better way to explain this than with examples, so here we have
two equivalent pieces of code:"

await px then { x -> await py then { y -> x + y } }

(
    then x <- await px
    then y <- await py
    x + y
)

"The braces are necessary because we don't want the remainder of this file to be
inside of a callback, do we?
Also it is quite funny that we have already defined async-await syntax, but we
haven't defined syntax for variable declaration and assignment yet."

"At last, let's flex our declarative muscles a little."

then json <- await (fetch "example.com")
print (map json to xml, sanitize)
flex muscles (declaratively)
